{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAkBtB,SAAsBC,GACpBA,EAAEC,iBACFC,aAlBY,MAoBZ,IAAIC,EAAQC,OAAOR,EAAKS,MAAMC,OAC1BC,EAAOH,OAAOR,EAAKW,KAAKD,OACxBE,EAASJ,OAAOR,EAAKY,OAAOF,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCC,EAAcD,EAAGN,GACdQ,MAAK,EAACC,SAAEA,EAAQP,MAAEA,MACjBX,EAAAmB,OAAOC,QAAQ,uBAAqBF,QAAiBP,MAAU,IAEhEU,OAAM,EAACH,SAAEA,EAAQP,MAAEA,MAClBX,EAAAmB,OAAOG,QAAQ,sBAAoBJ,QAAeP,MAAU,IAEhEF,GAASI,EAGXX,EAAKqB,O,IAjCP,SAASP,EAAcE,EAAUP,GAC/B,MAAMa,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEV,E,MAAUP,IAEpBkB,EAAO,C,SAAEX,E,MAAUP,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nlet timerId = null;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  clearTimeout(timerId);\n\n  let delay = Number(form.delay.value);\n  let step = Number(form.step.value);\n  let amount = Number(form.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n\n  form.reset();\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","preventDefault","clearTimeout","delay1","Number","delay","value","step","amount","i","$47d4ff9957288465$var$createPromise","then","position","Notify","success","catch","failure","reset","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.3f231475.js.map"}